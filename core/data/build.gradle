plugins {
    id 'com.android.library' // 다른 애플리케이션이나 모듈에서 재사용할 수 있는 코드를 포함
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

// 프로퍼티를 선언하고, 저장한 키값을 불러온다.
Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    println "local.properties 파일을 읽었습니다."
} else {
    println "local.properties 파일을 찾을 수 없습니다."
}

android {
    namespace 'com.swmarastro.mykkumi.data'
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            def baseUrl = properties.getProperty('api.baseurl', '')
            println "BASE_URL: ${baseUrl}"

            if (!baseUrl.isEmpty()) {
                buildConfigField "String", 'BASE_URL', "${properties.getProperty('api.baseurl', '')}"
            } else {
                throw new GradleException("BASE_URL is not set in local.properties")
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = jvm_target_version
    }
    buildFeatures {
        buildConfig true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation project(path: ':core:domain')

    // Test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    // implementation "com.github.skydoves:sandwich:$sandwich_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}